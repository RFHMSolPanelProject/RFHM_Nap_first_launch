// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RHM_Napv02_projekt_server.Models;

#nullable disable

namespace RHM_Napv02_projekt_server.Migrations
{
    [DbContext(typeof(SolContext))]
    partial class SolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoworkerMainProject", b =>
                {
                    b.Property<string>("CoworkerMainsCoworkerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectsProjectID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CoworkerMainsCoworkerId", "ProjectsProjectID");

                    b.HasIndex("ProjectsProjectID");

                    b.ToTable("CoworkerMainProject");
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+Compartment", b =>
                {
                    b.Property<int>("CompartmentNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompartmentNr"), 1L, 1);

                    b.Property<int>("Bracket")
                        .HasColumnType("int");

                    b.Property<int>("Col")
                        .HasColumnType("int");

                    b.Property<string>("CompartmentComponentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ComponentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Row")
                        .HasColumnType("int");

                    b.Property<float>("StoragedPiece")
                        .HasColumnType("real");

                    b.HasKey("CompartmentNr");

                    b.HasIndex("CompartmentComponentID")
                        .IsUnique();

                    b.ToTable("rekesz", (string)null);
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+Component", b =>
                {
                    b.Property<string>("ComponentName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ComponentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxPiece")
                        .HasColumnType("int");

                    b.Property<int>("Piece")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("ProjectPackageComponentID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ComponentName");

                    b.HasIndex("ProjectPackageComponentID");

                    b.ToTable("alkatresz", (string)null);
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerData", b =>
                {
                    b.Property<string>("CoworkerTel")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoworkerAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoworkerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoworkerTel");

                    b.ToTable("munkatars_adat", (string)null);
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerLogin", b =>
                {
                    b.Property<string>("CoworkerLoginID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoworkerLoginID");

                    b.ToTable("munkatars_login", (string)null);
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerMain", b =>
                {
                    b.Property<string>("CoworkerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoworkerLoginID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoworkerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoworkerPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CoworkerTel")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProjectCoworkerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoworkerId");

                    b.HasIndex("CoworkerLoginID")
                        .IsUnique();

                    b.HasIndex("CoworkerPosition")
                        .IsUnique();

                    b.HasIndex("CoworkerTel")
                        .IsUnique();

                    b.ToTable("munkatars_fo", (string)null);
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerPermission", b =>
                {
                    b.Property<string>("CoworkerPermissionName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PermissionDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CoworkerPermissionName");

                    b.ToTable("munkatars_jogosultsag", (string)null);
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+Customer", b =>
                {
                    b.Property<string>("CustomerID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("megrendelo", (string)null);
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+Process", b =>
                {
                    b.Property<int>("ProcessID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcessID"), 1L, 1);

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProcessID");

                    b.HasIndex("ProcessName")
                        .IsUnique();

                    b.ToTable("folyamat", (string)null);
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+Project", b =>
                {
                    b.Property<string>("ProjectID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectCustomerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectID");

                    b.HasIndex("ProjectCustomerID");

                    b.ToTable("projekt", (string)null);
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+ProjectPackage", b =>
                {
                    b.Property<string>("ProjectPackageID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PackageComponentName")
                        .HasColumnType("int");

                    b.Property<string>("PackageProjectID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RequiredPiece")
                        .HasColumnType("int");

                    b.HasKey("ProjectPackageID");

                    b.ToTable("projekt_csomag", (string)null);
                });

            modelBuilder.Entity("CoworkerMainProject", b =>
                {
                    b.HasOne("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerMain", null)
                        .WithMany()
                        .HasForeignKey("CoworkerMainsCoworkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RHM_Napv02_projekt_server.Models.SqlTable+Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+Compartment", b =>
                {
                    b.HasOne("RHM_Napv02_projekt_server.Models.SqlTable+Component", "ComponentNav")
                        .WithOne("CompartmentNav")
                        .HasForeignKey("RHM_Napv02_projekt_server.Models.SqlTable+Compartment", "CompartmentComponentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComponentNav");
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+Component", b =>
                {
                    b.HasOne("RHM_Napv02_projekt_server.Models.SqlTable+ProjectPackage", "ComponentProjectPNav")
                        .WithMany("Components")
                        .HasForeignKey("ProjectPackageComponentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComponentProjectPNav");
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerMain", b =>
                {
                    b.HasOne("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerLogin", "CoworkerLoginNav")
                        .WithOne("CoworkerLoginCoworkerMainNav")
                        .HasForeignKey("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerMain", "CoworkerLoginID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerPermission", "CoworkerPermissionNav")
                        .WithOne("CoworkerMainNav")
                        .HasForeignKey("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerMain", "CoworkerPosition")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerData", "CoworkerDataNav")
                        .WithOne("CoworkerDataCoworkerMainNav")
                        .HasForeignKey("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerMain", "CoworkerTel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoworkerDataNav");

                    b.Navigation("CoworkerLoginNav");

                    b.Navigation("CoworkerPermissionNav");
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+Process", b =>
                {
                    b.HasOne("RHM_Napv02_projekt_server.Models.SqlTable+Project", "ProcessProjectNav")
                        .WithOne("ProcessNav")
                        .HasForeignKey("RHM_Napv02_projekt_server.Models.SqlTable+Process", "ProcessName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProcessProjectNav");
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+Project", b =>
                {
                    b.HasOne("RHM_Napv02_projekt_server.Models.SqlTable+Customer", "CustomerNav")
                        .WithMany("Projects")
                        .HasForeignKey("ProjectCustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerNav");
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+ProjectPackage", b =>
                {
                    b.HasOne("RHM_Napv02_projekt_server.Models.SqlTable+Project", "ProjectPackageProjectNav")
                        .WithOne("ProjectPackageNav")
                        .HasForeignKey("RHM_Napv02_projekt_server.Models.SqlTable+ProjectPackage", "ProjectPackageID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectPackageProjectNav");
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+Component", b =>
                {
                    b.Navigation("CompartmentNav")
                        .IsRequired();
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerData", b =>
                {
                    b.Navigation("CoworkerDataCoworkerMainNav")
                        .IsRequired();
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerLogin", b =>
                {
                    b.Navigation("CoworkerLoginCoworkerMainNav")
                        .IsRequired();
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+CoworkerPermission", b =>
                {
                    b.Navigation("CoworkerMainNav")
                        .IsRequired();
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+Customer", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+Project", b =>
                {
                    b.Navigation("ProcessNav")
                        .IsRequired();

                    b.Navigation("ProjectPackageNav")
                        .IsRequired();
                });

            modelBuilder.Entity("RHM_Napv02_projekt_server.Models.SqlTable+ProjectPackage", b =>
                {
                    b.Navigation("Components");
                });
#pragma warning restore 612, 618
        }
    }
}
